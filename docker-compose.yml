version: "3.8"
services:
  db:
    image: postgres:16
    env_file:
      - .env
    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 3s
      timeout: 3s
      retries: 3

    environment:
      DB_PASS: ${DB_PASS}
      POSTGRES_PASSWORD: ${DB_PASS}
      PYTHONPATH: "/fastapi_app"
      POSTGRES_DB: ${DB_NAME}

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 3

  app:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DB_PASS: ${DB_PASS}
      POSTGRES_PASSWORD: ${DB_PASS}
      PYTHONPATH: "/fastapi_app"
    command: ["sh", "-c", "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build: .
    image:
      celery:latest
    environment:
      - PYTHONPATH=/fastapi_app/
    command: ["sh", "-c", "celery -A task:celery worker"]
    healthcheck:
      test: ["CMD-SHELL", "celery -A task:celery status"]
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      - redis

  flower:
    build: .
    ports:
      - "5555:5555"
    image: mher/flower:latest
    environment:
      - PYTHONPATH=/fastapi_app/
      - FLOWER_UNAUTHENTICATED_API=true
    command: ["sh", "-c", "celery -A task:celery flower"]
    depends_on:
      redis:
          condition: service_healthy
      celery:
          condition: service_healthy



